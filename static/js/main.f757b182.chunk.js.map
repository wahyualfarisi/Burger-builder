{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/UI/Button/Button.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","Logo","src","LogoPic","width","alt","NavigationItem","className","classes","activeClassName","active","exact","to","link","withRouter","console","log","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","toggleHandler","DesktopOnly","Backdrop","show","SideDrawer","attachedClass","Close","open","Open","Aux","closed","join","Layout","state","isShowSideDraw","sideDrawerCloseHander","setState","sideDrawerToggleHandler","prevState","this","Content","React","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","disabled","remove","Less","add","More","controls","BuildControls","price","item","addIngredient","removeIngredient","ordered","purchasable","OrderButton","Modal","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinue","instance","axios","create","baseURL","Spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmHandler","reqInterceptors","interceptors","request","use","resInterceptors","response","res","eject","message","INGREDIENT_PRICE","salad","bacon","cheese","meat","totalPrice","purchasing","loading","addIngredientsHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientsHandler","oldCount","removeCount","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","err","sum","a","b","orderSummary","burger","textAlign","CheckoutSummary","margin","checkoutCanceled","checkoutContinue","Input","inputElement","InputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","opt","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","onCheckValidity","rules","isValid","trim","onChangeHandler","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","orderHandler","preventDefault","formData","formInputValue","order","orderData","post","formElementArr","id","config","form","onSubmit","formElement","Checkout","checkoutCanceledHander","goBack","checkoutContinueHandler","replace","URLSearchParams","location","entries","param","path","match","render","Order","ingredientName","amount","ingredientOutput","ig","display","padding","border","borderBottom","color","background","Orders","orders","fetchOrders","App","component","BurgerBuilder","Boolean","window","hostname","app","basename","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f757b182.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load7\":\"Spinner_load7__3lEXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Order_Orders__2ALu2\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport LogoPic from './../../assets/images/burger-logo.png';\n\n\nconst Logo = (props) => {\n    return (\n        <img src={LogoPic} width=\"35px\" alt=\"Logo\" />\n    )\n}\n\nexport default Logo\n","import React from 'react'\nimport classes from './NavigationItem.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst NavigationItem = props => {\n    return (\n      <li className={classes.NavigationItem}> \n              <NavLink \n                activeClassName={classes.active}\n                exact={props.exact}\n                to={props.link}> \n                {props.children}\n              </NavLink> \n      </li>\n    )\n}\n\nexport default NavigationItem\n","import React from 'react'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport classes from './NavigationItems.module.css';\nimport { withRouter  } from 'react-router-dom';\n\nconst NavigationItems = (props) => {\n    console.log(props, 'hallo')\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem link=\"/\" exact> Burder Builder </NavigationItem>\n            <NavigationItem link=\"/orders\"> Orders </NavigationItem>\n        </ul>\n    )\n}\n\nexport default withRouter(NavigationItems) \n","import React from 'react'\nimport classes from './DrawerToggle.module.css';\n\nconst DrawerToggle = ( props ) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default DrawerToggle\n","import React from 'react'\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst Toolbar = (props) => {\n    console.log('[Toolbar.js]', props)\n    return (\n        <header className={classes.Toolbar}>\n            <DrawerToggle clicked={props.toggleHandler} />\n            <Logo />\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems />\n            </nav>\n        </header>\n    )\n}\n\nexport default Toolbar\n","import React from 'react'\nimport classes from './Backdrop.module.css'\n\nconst Backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default Backdrop\n","import React from 'react'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport classes from './SideDrawer.module.css';\nimport Backdrop from './../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst SideDrawer = (props) => {\n    console.log('[sideDrawer.js]', props);\n\n    let attachedClass = [classes.SideDrawer, classes.Close];\n\n    if(props.open){\n        attachedClass = [classes.SideDrawer, classes.Open];\n    }\n\n    \n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClass.join(' ')}>\n                <Logo />\n                <nav>\n                    <NavigationItems />     \n                </nav>\n            </div>\n        </Aux>\n    )\n}\n\nexport default SideDrawer\n","import React from 'react';\nimport Aux from '../Aux/Aux';\n\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends React.Component {\n    state = {\n        isShowSideDraw: false\n    }\n\n    sideDrawerCloseHander = () => {\n        this.setState({ isShowSideDraw: false })\n    }\n\n\n    sideDrawerToggleHandler = () => {\n       this.setState(prevState => {\n           return {\n               isShowSideDraw: !prevState.isShowSideDraw\n           }\n       })\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar toggleHandler={this.sideDrawerToggleHandler} />\n                <SideDrawer \n                    open={this.state.isShowSideDraw} \n                    closed={this.sideDrawerCloseHander} \n                />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )    \n    }\n} \n\nexport default Layout;","import React from 'react'\nimport classes from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nconst BurgerIngredient = (props) => {\n\n    let ingredient = null;\n\n    switch(props.type)\n    {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>\n        break;\n\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1} ></div>\n                    <div className={classes.Seeds2} ></div>\n                </div>\n            )\n        break;\n\n        case ('meat'):\n            ingredient = <div className={classes.Meat} ></div>\n        break;\n\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese} ></div>\n        break;\n\n        case ('salad'):\n            ingredient = <div className={classes.Salad} ></div>\n        break;\n\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon} ></div>\n        break;\n\n        default:\n             ingredient = null;\n    }\n\n    return ingredient;\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient\n","import React from 'react'\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\n\n\nconst Burger = (props) => {\n    let transformIngredients = Object.keys(props.ingredients)  // transform to ['salad','bacon','cheese','meat']\n                                    .map(igKey => {\n                                        return [ ...Array( props.ingredients[ igKey ] ) ].map((_, i) => {\n                                            console.log(igKey)\n                                            return <BurgerIngredient key={ igKey + i } type={igKey} />\n                                        })\n                                    })\n                                    .reduce((arr, el) => {\n                                        return arr.concat(el)\n                                    }, []);\n\n    if( transformIngredients.length === 0 ) \n        transformIngredients = <p> Please start adding ingredients ! </p>\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    )\n}\n\nexport default Burger\n","import React from 'react'\nimport classes from './BuildControl.module.css';\n\nconst BuildControl = (props) => {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button disabled={props.disabled} onClick={props.remove} className={classes.Less}>Less</button>\n            <button onClick={props.add} className={classes.More}>More</button>\n        </div>\n    )\n}\n\nexport default BuildControl\n","import React from 'react'\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Meat', type: 'meat' },\n    { label: 'Salad', type: 'salad' }\n]\n\n\nconst BuildControls = ( props ) => {\n    \n    return (\n        <div className={classes.BuildControls}>\n            <p>Current Price: <strong> {props.price}  </strong></p>\n            {\n                controls.map((item, i) => {\n                    return (\n                        <BuildControl \n                            add={ () => props.addIngredient(item.type)} \n                            remove={ () => props.removeIngredient(item.type) }\n                            disabled={ props.ingredients[item.type] === 0 ? 'disabled' : '' }\n                            key={item.label} label={item.label} \n                        />\n                    )\n                } )\n            }\n            <button \n                onClick={props.ordered}\n                disabled={!props.purchasable} \n                className={classes.OrderButton}>ORDER NOW</button>\n        </div>\n    )\n}\n\nexport default BuildControls\n","import React from 'react';\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst Modal = (props) => {\n    return (\n        <Aux>\n             <Backdrop show={props.show} clicked={props.modalClosed} />\n            <div \n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}\n                className={classes.Modal}>\n                {props.children}\n            </div>\n        </Aux>\n    )\n}\n\nexport default Modal\n","import React from 'react';\nimport classes from './Button.module.css'\n\n\nconst Button = (props) => {\n    console.log('[Button.js] ', props, classes)\n    return (\n        <button \n            disabled={props.disabled}\n            onClick={props.clicked}\n            className={[classes.Button, classes[props.btnType]].join(' ')} >\n            {props.children}\n        </button>\n    )\n}\nexport default Button\n","import React from 'react'\nimport Aux from '../../../hoc/Aux/Aux'\nimport Button from '../../UI/Button/Button';\n\nconst OrderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n                              .map((igKey,i) => {\n                                  return <li key={i}> <span style={{\n                                      textTransform: 'capitalize'\n                                  }}>{igKey}</span> : {props.ingredients[igKey]} </li>\n                              });\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients : </p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: {props.price}</strong></p>\n            <p>Continue to checkout ? </p>\n\n            <Button btnType=\"Danger\" clicked={props.purchaseCanceled} > Cancel </Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinue}> Countinue </Button>\n        </Aux>\n    )\n}\n\nexport default OrderSummary\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-26b39.firebaseio.com/'\n})\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst Spinner = () => {\n    return (\n        <div className={classes.Loader}>\n            Loading ...\n        </div>\n    )\n}\n\nexport default Spinner\n","import React from 'react';\nimport Modal from './../../components/UI/Modal/Modal';\nimport Aux from './../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent , axios ) => {\n    return class extends React.Component {\n\n        state = {\n            error: null\n        }\n\n        componentWillMount(){\n            this.reqInterceptors = axios.interceptors.request.use(request => {\n                this.setState({ error: null })\n                return request\n            })\n\n            this.resInterceptors = axios.interceptors.response.use(res => res , error  => {\n                this.setState({ error: error })\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptors);\n            axios.interceptors.response.eject(this.resInterceptors);\n\n        }\n\n        errorConfirmHandler = () => {\n            this.setState({ error: null })\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal \n                        modalClosed={this.errorConfirmHandler}\n                        show={this.state.error}>\n                        { this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    } \n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport Aux from './../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from './../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler'\n\nconst INGREDIENT_PRICE = {\n    salad: 2000,\n    bacon: 3000,\n    cheese: 4000,\n    meat: 10000\n}\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        ingredients: null,\n        totalPrice: 1000,\n        purchasable: false,\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount() {\n        axios.get(`/ingredients.json`)\n            .then(res => {\n                this.setState({\n                    ingredients: res.data\n                })\n            })\n            .catch(err => {\n                this.setState({\n                    error: true\n                })\n            })\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys(ingredients)\n                    .map(igKey => ingredients[igKey])\n                    .reduce((a, b) => a + b, 0);\n        \n        this.setState({\n            purchasable: sum > 0\n        });\n\n    }\n\n    addIngredientsHandler = type => {\n\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount  + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updatedCount;\n\n        const priceAddition = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        \n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updatedIngredients\n        });\n        this.updatePurchaseState( updatedIngredients )\n    }\n\n    removeIngredientsHandler = type => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount === 0) return false;\n\n        const removeCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = removeCount;\n\n        const priceAddition = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n\n        this.setState({\n            totalPrice: newPrice,\n            ingredients: updatedIngredients\n        });\n        this.updatePurchaseState( updatedIngredients )\n    }\n\n    purchaseHandler = () => {\n        this.setState({\n            purchasing: true\n        })\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n\n    purchaseContinueHandler = () => {\n        \n        const queryParams = [];\n\n        for(let i in this.state.ingredients){\n            queryParams.push(encodeURIComponent(i)  + '=' + encodeURIComponent(this.state.ingredients[i]) )\n        }\n        queryParams.push('price=' + this.state.totalPrice);\n        \n        const queryString = queryParams.join('&')\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        })\n    }\n\n    render(){\n        let orderSummary = null;\n\n\n        let burger = this.state.error ? <p style={{ textAlign: 'center' }}>Something went wrong</p> : <Spinner />;\n\n        if(this.state.ingredients){\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.state.ingredients} />\n                    <BuildControls \n                        purchasable={this.state.purchasable}\n                        price={this.state.totalPrice}\n                        ingredients={this.state.ingredients}\n                        addIngredient={this.addIngredientsHandler} \n                        ordered={this.purchaseHandler}\n                        removeIngredient={this.removeIngredientsHandler} />\n                </Aux>\n            );\n\n            orderSummary =  <OrderSummary \n                price={this.state.totalPrice}\n                purchaseCanceled={this.purchaseCancelHandler}\n                purchaseContinue={this.purchaseContinueHandler}\n                ingredients={this.state.ingredients} \n            />\n        }\n\n\n        if(this.state.loading){\n            orderSummary = <Spinner />;\n        }\n\n\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                   {orderSummary}\n                </Modal>\n                \n               {burger}\n               \n            </Aux>\n        )\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios) ;","import React from 'react';\nimport Burger from './../../Burger/Burger';\nimport Button from './../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst CheckoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We Hope it tastes well!</h1>\n            <div style={{\n                    width: '100%',\n                    margin: 'auto'\n                }}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n\n            <Button btnType=\"Danger\" clicked={props.checkoutCanceled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.checkoutContinue}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default CheckoutSummary\n","import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = (props) => {\n    let inputElement = null;\n\n    const InputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        InputClasses.push(classes.Invalid)\n    }\n     \n\n    switch(props.elementType)\n    {\n        case ('input'):\n            inputElement = <input \n                {...props.elementConfig}\n                value={props.value}  \n                className={InputClasses.join(' ')} \n                onChange={props.changed}/>;\n        break;\n\n        case ('textarea'):\n            inputElement = <textarea \n                {...props.elementConfig}\n                value={props.value}  \n                className={InputClasses.join(' ')} \n                onChange={props.changed}/>\n        break;\n\n        case ('select'):\n            inputElement = (\n                <select \n                value={props.value}\n                className={InputClasses.join(' ')} \n                onChange={props.changed}>\n                    {props.elementConfig.options.map(opt => <option key={opt.value} value={opt.value}>{opt.displayValue}</option> )}\n                </select>\n            )\n        break;\n\n        default:\n            inputElement = <input \n                {...props.elementConfig}\n                value={props.value}  \n                className={InputClasses.join(' ')} \n                onChange={props.changed}/>\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default Input\n","import React , { Component } from 'react';\nimport Button from './../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport Spinner from './../../../components/UI/Spinner/Spinner';\nimport axios from './../../../axios-orders';\nimport Input from './../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your ZipCode'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    onCheckValidity = (value, rules) => {\n        let isValid = true;\n\n        if( rules.required ){\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if( rules.minLength ) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if( rules.maxLength ) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        return isValid;\n    }\n\n    onChangeHandler = (event, inputIdentifier) => {\n\n        //Copy from state\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n\n        //Grab object base on input name \n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value; //mutate a value \n        updatedFormElement.valid = this.onCheckValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement //update form order \n\n        let formIsValid = true;\n\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n        }\n        \n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: formIsValid\n        })\n\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const formData = {};\n        for( let formInputValue in this.state.orderForm ){\n            formData[formInputValue] = this.state.orderForm[formInputValue].value;\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.totalPrice,\n            orderData: formData           \n        }\n\n         axios.post('/order.json', order)\n              .then(res => {\n                  console.log(res)\n                  this.setState({\n                      loading: false\n                  });\n\n                  this.props.history.push('/')\n              })\n              .catch(res => {\n                    this.setState({\n                        loading: false\n                    })\n              });\n    }\n    render(){\n        const formElementArr = [];\n        for( let key in this.state.orderForm ) {\n            formElementArr.push(\n                {\n                    id: key,\n                    config: this.state.orderForm[key]\n                }\n            )\n        };\n\n\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                { formElementArr.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.onChangeHandler(event, formElement.id)} />\n                )) }\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n\n        if(this.state.loading){\n            form = <Spinner />\n        }\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n\n}\n\nexport default ContactData;","import React from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom'\nimport ContactData from './ContactData/ContactData'\n\nclass Checkout extends React.Component {\n    state = {\n        ingredients: null,\n        totalPrice: 0\n    }\n\n    componentWillMount(){\n        \n        const queryParams = new URLSearchParams(this.props.location.search);\n        \n        const ingredients = {};\n        let price = 0;\n\n        for(let param of queryParams.entries() ){\n            //['salad', '1'] for example\n            if(param[0] === 'price'){\n                price = param[1];\n            }else{\n                ingredients[param[0]] = +param[1]\n            }\n        }\n        \n        this.setState({ ingredients: ingredients, totalPrice: price })\n    }\n\n    checkoutCanceledHander = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinueHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n\n    render(){\n        return (\n            <div>\n                <CheckoutSummary \n                    checkoutCanceled={this.checkoutCanceledHander}\n                    checkoutContinue={this.checkoutContinueHandler}\n                    ingredients={this.state.ingredients} />\n                \n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    render={() => (\n                        <ContactData \n                            {...this.props}\n                            totalPrice={this.state.totalPrice}\n                            ingredients={this.state.ingredients} />\n                    )}\n                />\n\n            </div>\n        )\n    }\n\n}\n\nexport default Checkout;","import React from 'react';\nimport classes from './Order.module.css';\nimport Burger from '../Burger/Burger';\n\nconst Order = ( props ) => {\n    const ingredients = [];\n\n    for(let ingredientName in props.ingredients){\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        )\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n                style={{\n                    display: 'inline-block',\n                    padding: '5px',\n                    margin: '5px',\n                    border: '1px solid #ccc',\n                    borderBottom: '2px solid #91ce50',\n                    color: 'white',\n                    background: '#703B09',\n                    textTransform: 'capitalize'\n                }}\n                key={ig.name}>\n                    {ig.name} ({ig.amount})\n                </span>\n    })\n\n    return (\n        <div className={classes.Orders}>\n            <div>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <p>Ingredients: {ingredientOutput} </p>\n            <p style={{\n                padding: '5px',\n                border: '1px solid #703B09',\n                width: '150px'\n            }}>Price <strong>RP. {props.price}</strong> </p>\n        </div>\n    )\n}\n\nexport default Order\n","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from './../../axios-orders';\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/order.json')\n             .then(res => {\n                const fetchOrders = [];\n                for(let key in res.data){\n                    fetchOrders.push({\n                        ...res.data[key],\n                        id: key\n                    })\n                }\n                this.setState({ loading: false, orders: fetchOrders })\n             })\n             .catch(res => {\n                this.setState({ loading: false })\n             })\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.orders.map(order => (\n                        <Order \n                            key={order.id} \n                            ingredients={order.ingredients} \n                            price={order.price} />\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch  } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\n\n\n\nclass App extends React.Component {\n \n\n  render(){\n    return (\n      <div>\n          <Layout>\n            <Switch>\n              <Route path=\"/\" exact component={BurgerBuilder} />\n              <Route path=\"/checkout\"  component={Checkout} />\n              <Route path=\"/orders\" component={Orders} />\n            </Switch>\n          </Layout>\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n  <BrowserRouter basename=\"/\">\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}