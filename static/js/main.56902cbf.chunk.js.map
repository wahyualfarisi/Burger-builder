{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","Logo","src","LogoPic","width","alt","NavigationItem","className","classes","activeClassName","active","exact","to","link","withRouter","NavigationItems","isAuth","DrawerToggle","onClick","clicked","Toolbar","toggleHandler","DesktopOnly","Backdrop","show","SideDrawer","attachedClass","Close","open","Open","Aux","closed","join","Layout","state","isShowSideDraw","sideDrawerCloseHander","setState","sideDrawerToggleHandler","prevState","this","isAuthenticated","Content","React","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformIngredients","Object","keys","ingredients","map","igKey","Array","_","i","console","log","key","reduce","arr","el","concat","length","BuildControl","Label","label","disabled","remove","Less","add","More","controls","BuildControls","price","item","addIngredient","removeIngredient","ordered","purchasable","OrderButton","Modal","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinue","instance","axios","create","baseURL","Spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmHandler","reqInterceptors","interceptors","request","use","resInterceptors","response","res","eject","message","authSuccess","userId","logout","localStorage","removeItem","checkauthTimeout","expiresIn","dispatch","setTimeout","BurgerBuilder","purchasing","purchaseHandler","history","push","purchaseCancelHandler","purchaseContinueHandler","onPurchaseInit","onInitIngredients","a","b","orderSummary","burger","textAlign","ings","updatePurchaseState","onIngredientAdd","onIngredientRemove","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","err","CheckoutSummary","margin","checkoutCanceled","checkoutContinue","Input","inputElement","InputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","opt","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","onCheckValidity","rules","isValid","trim","onChangeHandler","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","orderHandler","preventDefault","formData","formInputValue","order","orderData","onPurchaseBurger","formElementArr","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","OrderBurgerActions","Checkout","checkoutCanceledHander","goBack","checkoutContinueHandler","replace","summary","purchasedRedirect","purchased","path","match","component","Order","amount","ingredientOutput","ig","display","padding","border","borderBottom","color","background","Orders","onFetchOrder","orders","queryParams","actions","Auth","isEmail","password","isSignUp","inputName","updatedState","onAuth","switchAuthHandler","preveState","errorMessage","authRedirect","readyToOrder","authData","returnSecureToken","url","Axios","expirationDate","Date","getTime","setItem","idToken","localId","Logout","onLogout","App","onTryAutoSignUp","routes","getItem","Boolean","window","location","hostname","INGREDIENT_PRICE","salad","bacon","cheese","meat","initialState","reducer","action","priceAddition","oldPrice","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducers","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56902cbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load7\":\"Spinner_load7__3lEXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Order_Orders__2ALu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport LogoPic from './../../assets/images/burger-logo.png';\n\n\nconst Logo = (props) => {\n    return (\n        <img src={LogoPic} width=\"35px\" alt=\"Logo\" />\n    )\n}\n\nexport default Logo\n","import React from 'react'\nimport classes from './NavigationItem.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst NavigationItem = props => {\n    return (\n      <li className={classes.NavigationItem}> \n              <NavLink \n                activeClassName={classes.active}\n                exact={props.exact}\n                to={props.link}> \n                {props.children}\n              </NavLink> \n      </li>\n    )\n}\n\nexport default NavigationItem\n","import React from 'react'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport classes from './NavigationItems.module.css';\nimport { withRouter  } from 'react-router-dom';\n\nconst NavigationItems = (props) => {\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem link=\"/\" exact> Burder Builder </NavigationItem>\n            {props.isAuth ? <NavigationItem link=\"/orders\"> Orders </NavigationItem> : null } \n            {!props.isAuth \n                ? <NavigationItem link=\"/auth\"> Authenticated </NavigationItem>\n                : <NavigationItem link=\"/logout\"> Logout </NavigationItem>  }  \n        </ul>\n    );\n}\n\nexport default withRouter(NavigationItems) \n","import React from 'react'\nimport classes from './DrawerToggle.module.css';\n\nconst DrawerToggle = ( props ) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default DrawerToggle\n","import React from 'react'\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst Toolbar = (props) => {\n    return (\n        <header className={classes.Toolbar}>\n            <DrawerToggle clicked={props.toggleHandler} />\n            <Logo />\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems isAuth={props.isAuth} />\n            </nav>\n        </header>\n    )\n}\n\nexport default Toolbar\n","import React from 'react'\nimport classes from './Backdrop.module.css'\n\nconst Backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default Backdrop\n","import React from 'react'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport classes from './SideDrawer.module.css';\nimport Backdrop from './../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst SideDrawer = (props) => {\n    \n\n    let attachedClass = [classes.SideDrawer, classes.Close];\n\n    if(props.open){\n        attachedClass = [classes.SideDrawer, classes.Open];\n    }\n\n    \n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClass.join(' ')} onClick={props.closed}>\n                <Logo />\n                <nav>\n                    <NavigationItems isAuth={props.isAuth} />     \n                </nav>\n            </div>\n        </Aux>\n    )\n}\n\nexport default SideDrawer\n","import React from 'react';\nimport Aux from '../Aux/Aux';\n\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux';\n\nclass Layout extends React.Component {\n    state = {\n        isShowSideDraw: false\n    }\n\n    sideDrawerCloseHander = () => {\n        this.setState({ isShowSideDraw: false })\n    }\n\n\n    sideDrawerToggleHandler = () => {\n       this.setState(prevState => {\n           return {\n               isShowSideDraw: !prevState.isShowSideDraw\n           }\n       })\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar \n                    isAuth={this.props.isAuthenticated}\n                    toggleHandler={this.sideDrawerToggleHandler} />\n                <SideDrawer \n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.isShowSideDraw} \n                    closed={this.sideDrawerCloseHander} \n                />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )    \n    }\n} \n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null \n    }\n}\n\nexport default connect(mapStateToProps, null)(Layout) ;","import React from 'react'\nimport classes from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nconst BurgerIngredient = (props) => {\n\n    let ingredient = null;\n\n    switch(props.type)\n    {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>\n        break;\n\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1} ></div>\n                    <div className={classes.Seeds2} ></div>\n                </div>\n            )\n        break;\n\n        case ('meat'):\n            ingredient = <div className={classes.Meat} ></div>\n        break;\n\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese} ></div>\n        break;\n\n        case ('salad'):\n            ingredient = <div className={classes.Salad} ></div>\n        break;\n\n        case ('bacon'):\n            ingredient = <div className={classes.Bacon} ></div>\n        break;\n\n        default:\n             ingredient = null;\n    }\n\n    return ingredient;\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient\n","import React from 'react'\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\n\n\nconst Burger = (props) => {\n    let transformIngredients = Object.keys(props.ingredients)  // transform to ['salad','bacon','cheese','meat']\n                                    .map(igKey => {\n                                        return [ ...Array( props.ingredients[ igKey ] ) ].map((_, i) => {\n                                            console.log(igKey)\n                                            return <BurgerIngredient key={ igKey + i } type={igKey} />\n                                        })\n                                    })\n                                    .reduce((arr, el) => {\n                                        return arr.concat(el)\n                                    }, []);\n\n    if( transformIngredients.length === 0 ) \n        transformIngredients = <p> Please start adding ingredients ! </p>\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    )\n}\n\nexport default Burger\n","import React from 'react'\nimport classes from './BuildControl.module.css';\n\nconst BuildControl = (props) => {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button disabled={props.disabled} onClick={props.remove} className={classes.Less}>Less</button>\n            <button onClick={props.add} className={classes.More}>More</button>\n        </div>\n    )\n}\n\nexport default BuildControl\n","import React from 'react'\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Meat', type: 'meat' },\n    { label: 'Salad', type: 'salad' }\n]\n\n\nconst BuildControls = ( props ) => {\n    \n    return (\n        <div className={classes.BuildControls}>\n            <p>Current Price: <strong> {props.price}  </strong></p>\n            {\n                controls.map((item, i) => {\n                    return (\n                        <BuildControl \n                            add={ () => props.addIngredient(item.type)} \n                            remove={ () => props.removeIngredient(item.type) }\n                            disabled={ props.ingredients[item.type] === 0 ? 'disabled' : '' }\n                            key={item.label} label={item.label} \n                        />\n                    )\n                } )\n            }\n            <button \n                onClick={props.ordered}\n                disabled={!props.purchasable} \n                className={classes.OrderButton}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'} </button>\n        </div>\n    )\n}\n\nexport default BuildControls\n","import React from 'react';\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst Modal = (props) => {\n    return (\n        <Aux>\n             <Backdrop show={props.show} clicked={props.modalClosed} />\n            <div \n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}\n                className={classes.Modal}>\n                {props.children}\n            </div>\n        </Aux>\n    )\n}\n\nexport default Modal\n","import React from 'react';\nimport classes from './Button.module.css'\n\n\nconst Button = (props) => {\n    return (\n        <button \n            disabled={props.disabled}\n            onClick={props.clicked}\n            className={[classes.Button, classes[props.btnType]].join(' ')} >\n            {props.children}\n        </button>\n    )\n}\nexport default Button\n","import React from 'react'\nimport Aux from '../../../hoc/Aux/Aux'\nimport Button from '../../UI/Button/Button';\n\nconst OrderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n                              .map((igKey,i) => {\n                                  return <li key={i}> <span style={{\n                                      textTransform: 'capitalize'\n                                  }}>{igKey}</span> : {props.ingredients[igKey]} </li>\n                              });\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients : </p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: {props.price}</strong></p>\n            <p>Continue to checkout ? </p>\n\n            <Button btnType=\"Danger\" clicked={props.purchaseCanceled} > Cancel </Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinue}> Countinue </Button>\n        </Aux>\n    )\n}\n\nexport default OrderSummary\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-26b39.firebaseio.com/'\n})\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst Spinner = () => {\n    return (\n        <div className={classes.Loader}>\n            Loading ...\n        </div>\n    )\n}\n\nexport default Spinner\n","import React from 'react';\nimport Modal from './../../components/UI/Modal/Modal';\nimport Aux from './../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent , axios ) => {\n    return class extends React.Component {\n\n        state = {\n            error: null\n        }\n\n        componentWillMount(){\n            this.reqInterceptors = axios.interceptors.request.use(request => {\n                this.setState({ error: null })\n                return request\n            })\n\n            this.resInterceptors = axios.interceptors.response.use(res => res , error  => {\n                this.setState({ error: error })\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptors);\n            axios.interceptors.response.eject(this.resInterceptors);\n\n        }\n\n        errorConfirmHandler = () => {\n            this.setState({ error: null })\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal \n                        modalClosed={this.errorConfirmHandler}\n                        show={this.state.error}>\n                        { this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    } \n}\n\nexport default withErrorHandler;","import * as actionTypes from './actionTypes';\nimport Axios from 'axios';\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = ( token, userId ) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        userId: userId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\n\nexport const checkauthTimeout = (expiresIn) => {\n    return dispatch => {\n        setTimeout( () => {\n            dispatch(logout())\n        }, expiresIn * 1000 )\n    }\n}\n\nexport const auth = ( email, password, isSignUp ) => {\n    return dispatch => {\n        dispatch( authStart() )\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBrMl6sEXwf3GgTruF_Nx9AFHx6cy50Vjo';\n        if(!isSignUp){\n            url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBrMl6sEXwf3GgTruF_Nx9AFHx6cy50Vjo`;\n        }\n\n        Axios.post(url, authData)\n             .then(res => {\n                 console.log(res);\n                 const expirationDate = new Date( new Date().getTime() + res.data.expiresIn * 1000 );\n                 localStorage.setItem('token', res.data.idToken);\n                 localStorage.setItem('expirationDate', expirationDate )\n                 localStorage.setItem('userId', res.data.localId);\n                 dispatch(authSuccess( res.data.idToken, res.data.localId ))\n                 dispatch(checkauthTimeout(res.data.expiresIn))\n             })\n             .catch(err => {\n                 dispatch(authFail(err.response.data.error))\n             })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token  = localStorage.getItem('token');\n        const userId = localStorage.getItem('userId');\n\n        if( !token ) {\n            dispatch(logout());\n        }else{\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            \n            if(expirationDate <= new Date() ) {\n                dispatch(logout())\n            }else{\n                dispatch(authSuccess(token, userId))\n                dispatch(checkauthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START';\nexport const FETCH_ORDER_SUCCESS = 'FETCH_ORDER_SUCCESS';\nexport const FETCH_ORDER_FAIL = 'FETCH_ORDER_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React, { Component } from 'react';\nimport Aux from './../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from './../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from './../../store/actions/index';\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients()\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys(ingredients)\n                    .map(igKey => ingredients[igKey])\n                    .reduce((a, b) => a + b, 0);\n        \n        return sum > 0\n    }\n    \n\n    purchaseHandler = () => {\n        if(this.props.isAuthenticated){\n            this.setState({\n                purchasing: true\n            })\n        }else{\n            this.props.history.push('/auth')\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onPurchaseInit()\n        \n        this.props.history.push('/checkout')\n    }\n\n    render(){\n        let orderSummary = null;\n\n        let burger = this.props.error ? <p style={{ textAlign: 'center' }}>Something went wrong</p> : <Spinner />;\n\n        if(this.props.ings){\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls \n                        purchasable={ this.updatePurchaseState(this.props.ings) }\n                        price={this.props.price}\n                        ingredients={this.props.ings}\n                        addIngredient={this.props.onIngredientAdd} \n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                        removeIngredient={this.props.onIngredientRemove} />\n                </Aux>\n            );\n\n            orderSummary =  <OrderSummary \n                price={this.props.price}\n                purchaseCanceled={this.purchaseCancelHandler}\n                purchaseContinue={this.purchaseContinueHandler}\n                ingredients={this.props.ings} \n            />\n        }\n\n        return (\n            <Aux>\n                <Modal \n                    show={this.state.purchasing} \n                    modalClosed={this.purchaseCancelHandler}>\n                   {orderSummary}\n                </Modal>\n                \n               {burger}\n               \n            </Aux>\n        )\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdd: (ingName) => dispatch( actions.addIngredient(ingName) ),\n        onIngredientRemove: (ingName) => dispatch( actions.removeIngredient(ingName) ),\n        onInitIngredients: () => dispatch( actions.initIngredients()),\n        onPurchaseInit: () => dispatch( actions.purchaseInit()  )\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)( withErrorHandler(BurgerBuilder, axios) )  ;","import * as actionTypes from './actionTypes';\nimport axios from './../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name \n    }\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get(`/ingredients.json`)\n            .then(res => {\n                dispatch(setIngredients(res.data))\n            })\n            .catch(err => {\n                dispatch(fetchIngredientsFailed())    \n            })\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from './../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = ( orderData, token) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() )\n        axios.post(`/order.json?auth=${token}`, orderData)\n              .then(res => {\n                    console.log(res)\n                    dispatch(purchaseBurgerSuccess(res.data.name, orderData))\n              })\n              .catch(err => {\n                    dispatch(purchaseBurgerFail(err))\n              });\n    };\n};\n\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrderSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDER_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrderFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDER_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrderStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDER_START\n    }\n}\n\nexport const fetchOrder = (token, userId) => {\n    return dispatch => {\n        dispatch( fetchOrderStart() )\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\n        axios.get(`/order.json${queryParams}`)\n        .then(res => {\n           dispatch( fetchOrderSuccess(res.data) )\n        })\n        .catch(err => {\n           dispatch( fetchOrderFail(err) )\n        })\n    }\n}\n\n\n","import React from 'react';\nimport Burger from './../../Burger/Burger';\nimport Button from './../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\nconst CheckoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We Hope it tastes well!</h1>\n            <div style={{\n                    width: '100%',\n                    margin: 'auto'\n                }}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n\n            <Button btnType=\"Danger\" clicked={props.checkoutCanceled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.checkoutContinue}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default CheckoutSummary\n","import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = (props) => {\n    let inputElement = null;\n\n    const InputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        InputClasses.push(classes.Invalid)\n    }\n     \n\n    switch(props.elementType)\n    {\n        case ('input'):\n            inputElement = <input \n                {...props.elementConfig}\n                value={props.value}  \n                className={InputClasses.join(' ')} \n                onChange={props.changed}/>;\n        break;\n\n        case ('textarea'):\n            inputElement = <textarea \n                {...props.elementConfig}\n                value={props.value}  \n                className={InputClasses.join(' ')} \n                onChange={props.changed}/>\n        break;\n\n        case ('select'):\n            inputElement = (\n                <select \n                value={props.value}\n                className={InputClasses.join(' ')} \n                onChange={props.changed}>\n                    {props.elementConfig.options.map(opt => <option key={opt.value} value={opt.value}>{opt.displayValue}</option> )}\n                </select>\n            )\n        break;\n\n        default:\n            inputElement = <input \n                {...props.elementConfig}\n                value={props.value}  \n                className={InputClasses.join(' ')} \n                onChange={props.changed}/>\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default Input\n","import React , { Component } from 'react';\nimport Button from './../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport Spinner from './../../../components/UI/Spinner/Spinner';\nimport axios from './../../../axios-orders';\nimport Input from './../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport withErrorHandler from './../../../hoc/withErrorHandler/withErrorHandler';\nimport * as OrderBurgerActions from './../../../store/actions/index';\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your ZipCode'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n    onCheckValidity = (value, rules) => {\n        let isValid = true;\n\n        if( rules.required ){\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if( rules.minLength ) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if( rules.maxLength ) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        return isValid;\n    }\n\n    onChangeHandler = (event, inputIdentifier) => {\n\n        //Copy from state\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n\n        //Grab object base on input name \n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value; //mutate a value \n        updatedFormElement.valid = this.onCheckValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement //update form order \n\n        let formIsValid = true;\n\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n        }\n        \n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: formIsValid\n        })\n\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        \n        const formData = {};\n        for( let formInputValue in this.state.orderForm ){\n            formData[formInputValue] = this.state.orderForm[formInputValue].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId        \n        }\n\n        this.props.onPurchaseBurger(order, this.props.token)\n         \n    }\n    render(){\n        const formElementArr = [];\n        for( let key in this.state.orderForm ) {\n            formElementArr.push(\n                {\n                    id: key,\n                    config: this.state.orderForm[key]\n                }\n            )\n        };\n\n\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                { formElementArr.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.onChangeHandler(event, formElement.id)} />\n                )) }\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n\n        if(this.props.loading){\n            form = <Spinner />\n        }\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPurchaseBurger: (orderData, token) => dispatch( OrderBurgerActions.purchaseBurger(orderData, token ) )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)( withErrorHandler(ContactData, axios) ) ;","import React from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect } from 'react-router-dom'\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\n\n\nclass Checkout extends React.Component {\n\n    \n    checkoutCanceledHander = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinueHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n\n    render(){\n        let summary = <Redirect to=\"/\" />\n\n        const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null\n\n        if(this.props.ings){\n            summary =  (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary \n                        checkoutCanceled={this.checkoutCanceledHander}\n                        checkoutContinue={this.checkoutContinueHandler}\n                        ingredients={this.props.ings} \n                    />\n                \n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData}\n                    />\n\n                </div>   \n            )\n        }\n\n        return summary;\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout) ;","import React from 'react';\nimport classes from './Order.module.css';\nimport Burger from '../Burger/Burger';\n\nconst Order = ( props ) => {\n    const ingredients = [];\n\n    for(let ingredientName in props.ingredients){\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        )\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n                style={{\n                    display: 'inline-block',\n                    padding: '5px',\n                    margin: '5px',\n                    border: '1px solid #ccc',\n                    borderBottom: '2px solid #91ce50',\n                    color: 'white',\n                    background: '#703B09',\n                    textTransform: 'capitalize'\n                }}\n                key={ig.name}>\n                    {ig.name} ({ig.amount})\n                </span>\n    })\n\n    return (\n        <div className={classes.Orders}>\n            <div>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <p>Ingredients: {ingredientOutput} </p>\n            <p style={{\n                padding: '5px',\n                border: '1px solid #703B09',\n                width: '150px'\n            }}>Price <strong>RP. {props.price}</strong> </p>\n        </div>\n    )\n}\n\nexport default Order\n","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from './../../axios-orders';\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from './../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrder(this.props.token, this.props.userId)\n    }\n\n    render() {\n        let orders = <Spinner />;\n\n        if(!this.props.loading){\n          orders = this.props.orders.map(order => (\n                <Order \n                    key={order.id} \n                    ingredients={order.ingredients} \n                    price={order.price} />\n          )) \n        }\n\n        return (\n            <div>\n                {orders}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        error: state.order.error,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrder: (token, userId) => dispatch( actions.fetchOrder(token, userId) )\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler(Orders, axios) ) ;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Auth.module.css';\nimport Input from './../../components/UI/Input/Input';\nimport Button from './../../components/UI/Button/Button';\nimport * as actions from './../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        isSignUp: true\n    }\n\n    onCheckValidity = (value, rules) => {\n        let isValid = true;\n\n        if( rules.required ){\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if( rules.minLength ) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if( rules.maxLength ) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        return isValid;\n    }\n\n    onChangeHandler = (event, inputName) => {\n        const updatedState = {\n            ...this.state.controls,\n            [inputName]: {\n                ...this.state.controls[inputName],\n                value: event.target.value,\n                valid: this.onCheckValidity(event.target.value, this.state.controls[inputName].validation ),\n                touched: true \n            }\n        }\n\n        this.setState({\n            controls: updatedState\n        })\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\n    }\n\n    switchAuthHandler = () => {\n        this.setState(preveState => {\n            return {\n                isSignUp: !preveState.isSignUp\n            }\n        })\n    }\n\n    render(){\n\n        const formElementArr = [];\n        for( let key in this.state.controls ) {\n            formElementArr.push(\n                {\n                    id: key,\n                    config: this.state.controls[key]\n                }\n            )\n        };\n\n        let form = formElementArr.map(formElement => {\n            return (\n                <Input \n                    key={formElement.id}\n                    elementType={formElement.config.elementType} \n                    elementConfig={formElement.config.elementConfig} \n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation}\n                    touched={formElement.config.touched}\n                    changed={(event) => this.onChangeHandler(event, formElement.id)} \n                />\n            )\n        });\n\n        if(this.props.loading){\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n        if(this.props.error){\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            )\n        };\n\n        let authRedirect = null;\n        if(this.props.isAuthenticated){\n            if(this.props.readyToOrder){\n                authRedirect = <Redirect to=\"/checkout\" />\n            }else{\n                authRedirect = <Redirect to=\"/\" />\n            }\n        }\n\n        \n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.onSubmit}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                <Button \n                    clicked={this.switchAuthHandler}\n                    btnType=\"Danger\"> {this.state.isSignUp ? 'Switch To Login' : 'Switch To SignUp' } </Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        readyToOrder: state.burgerBuilder.ingredients !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: ( email, password, isSignUp ) => dispatch( actions.auth( email, password, isSignUp ) )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React , { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from './../../../store/actions/index';\nimport { Redirect } from 'react-router-dom';\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        this.props.onLogout();\n    }\n\n    render(){\n        return <Redirect to=\"/\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch( actions.logout() )\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout) ;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch, Redirect  } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\n\n\nclass App extends React.Component {\n \n  componentDidMount(){\n    this.props.onTryAutoSignUp();\n  }\n\n  render(){\n    let routes = (\n      <Switch>\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Route path=\"/auth\" component={Auth} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Route path=\"/checkout\"  component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n    return (\n      <div>\n          <Layout>\n            {routes}\n          </Layout>\n      </div>\n    );\n\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch( actions.authCheckState() )\n  }\n}\n\nexport default withRouter( connect(mapStateToProps, mapDispatchToProps)(App) ) ;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst INGREDIENT_PRICE = {\n    salad: 2000,\n    bacon: 3000,\n    cheese: 4000,\n    meat: 10000\n}\n\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 1000,\n    error: false\n}\n\nconst reducer = (state = initialState, action) => {\n\n    const priceAddition = INGREDIENT_PRICE[action.ingredientName];\n    const oldPrice      = state.totalPrice;\n\n    switch( action.type ){\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n                },\n                totalPrice: oldPrice + priceAddition\n            }\n\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: oldPrice - priceAddition\n            }\n\n        case actionTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: action.ingredients,\n                error: false,\n                totalPrice: 1000\n            }\n\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error: true\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from './../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false,\n    error: false\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch(action.type)\n    {\n        case actionTypes.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false\n            }\n\n        case actionTypes.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId\n            }\n\n            return {\n                ...state,\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            }\n        \n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n\n        case actionTypes.FETCH_ORDER_START:\n            return {\n                ...state,\n                loading: true \n            }\n\n        case actionTypes.FETCH_ORDER_SUCCESS:\n            const orders = [];\n            for(let key in action.orders){\n                orders.push({\n                    ...action.orders[key],\n                    id: key\n                })\n            }\n\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                orders: orders\n            }\n\n        case actionTypes.FETCH_ORDER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: true\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from './../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type)\n    {\n        case actionTypes.AUTH_START:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        \n        case actionTypes.AUTH_SUCCESS: \n            return {\n                ...state,\n                token: action.token,\n                userId: action.userId,\n                error: null,\n                loading: false\n            }\n\n        case actionTypes.AUTH_FAIL: \n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            }\n        \n        case actionTypes.AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n                userId: null\n            }\n\n        default:\n            return  state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider  } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducers = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore( rootReducers, composeEnhancers(\n     applyMiddleware(thunk)\n   )\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}